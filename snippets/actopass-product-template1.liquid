{% if product.template_suffix == 'actopassproductpage1' %}
<div class="container-1170">
    <div class="beadcrumbdetails">
        <div class="actoFunctions">
            {% for block in section.blocks %}
            {% case block.type %}
            {% when 'share-event' %}
            <div class="asShare">
                <button class="asShareBtn" onclick="shareContent()"> {{ block.settings.share_icon }} <p
                        style="margin: 0px;"> {{ block.settings.share_heading }} </p> </button>
            </div>
            {% endcase %}
            {% endfor %}
        </div>
    </div>

    {% comment %} PRODUCT START {% endcomment %}
    <div class="product-container">
        <div class="product-image">
            <div class="swiper productMediaSwiper">
                <div class="swiper-wrapper">
                    {% for media in product.media %}
                    <div class="swiper-slide">
                        {% if media.media_type == 'image' %}
                        <img src="{{ media | img_url: '1024x1024' }}" alt="{{ media.alt | escape }}">
                        {% elsif media.media_type == 'video' %}
                        {{ media | video_tag: autoplay: true, loop: true, controls: false }}
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
                <div class="swiper-button-next prdMediaSldrBtn prdMediaNext"></div>
                <div class="swiper-button-prev prdMediaSldrBtn prdMediaPrev"></div>
            </div>
        </div>

        {% for variant in product.variants %}
        {% assign current_date = variant.option1 %}
        {% assign time_group = variant.option2 %}
        {% assign options_group = variant.option3 %}
        {% assign prices_group = variant.price | money %}

        <div class="date-group" id="date-{{ current_date }}-{{ time_group }}">
            <h3 class="date-header">{{ current_date }}</h3>
            <div class="time-group">{{ time_group }}</div>
            <div class="type-price-box">
                <div class="options-group">{{ options_group }}</div>
                <div class="price-group">{{ prices_group }}</div>
            </div>
        </div>
        {% endfor %}
    </div>
    {% endif %}

    <script>
        var productMediaSwiper = new Swiper(".productMediaSwiper", {
            navigation: {
                nextEl: ".swiper-button-next.prdMediaNext",
                prevEl: ".swiper-button-prev.prdMediaPrev",
            },
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Grouped data object to hold variants by date and time
            var groupedVariants = {};

            // Select all the .date-group elements
            var dateGroups = document.querySelectorAll('.date-group');

            // Iterate over each date group to manipulate the content
            dateGroups.forEach(function (group) {
                var currentDate = group.querySelector('.date-header').textContent.trim();
                var timeGroup = group.querySelector('.time-group').textContent.trim();
                var options = group.querySelector('.options-group').textContent.trim();
                var price = group.querySelector('.price-group').textContent.trim();

                // Construct a unique key for each date and time
                var dateTimeKey = currentDate + ' ' + timeGroup;

                // If this dateTimeKey hasn't been encountered before, initialize it
                if (!groupedVariants[dateTimeKey]) {
                    groupedVariants[dateTimeKey] = [];
                }

                // Push the option-price pair to the corresponding dateTimeKey
                groupedVariants[dateTimeKey].push(options + ' - ' + price);

                // Remove the original ungrouped elements
                group.querySelector('.type-price-box').remove();
            });

            // Now we need to display the grouped variants
            var groupedOutputHTML = '';
            for (var dateTimeKey in groupedVariants) {
                if (groupedVariants.hasOwnProperty(dateTimeKey)) {
                    var optionsAndPrices = groupedVariants[dateTimeKey].join('  ');

                    // Split date and time
                    var [date, time] = dateTimeKey.split(' ');

                    // Create the final output structure
                    groupedOutputHTML += `
                <div class="date-group">
                    <h3 class="date-header">${date}</h3>
                    <div class="time-group">${time}</div>
                    <div class="options-group">${optionsAndPrices}</div>
                </div>
            `;
                }
            }

            // Insert the final output after the original content
            document.querySelector('body').innerHTML += groupedOutputHTML; // You can adjust where to append this as needed
        });

    </script>